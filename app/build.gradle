apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
ext {
    supportLibraryVersion = "26.1.0"
    mosbyVersion = "3.1.0"
    rxBindingVersion = "2.0.0"
    rxJavaVersion = "2.1.6"
    rxAndroidVersion = "2.0.1"
    timberVersion = "4.6.0"
    okhttpVersion = "3.9.1"
    okioVersion = "1.13.0"
}
android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "win.pcdack.mymvitest"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //MVI需要的依赖
    // Mosby
    compile "com.hannesdorfmann.mosby3:mvi:$mosbyVersion"

    // RxBinding
    compile "com.jakewharton.rxbinding2:rxbinding-kotlin:$rxBindingVersion"
    compile "com.jakewharton.rxbinding2:rxbinding-support-v4-kotlin:$rxBindingVersion"
    compile "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:$rxBindingVersion"

    // RxJava and RxAndroid
    compile "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    compile "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //OKHTTP
    compile "com.squareup.okhttp3:okhttp:$okhttpVersion"
    compile "com.squareup.okio:okio:$okioVersion"
}
repositories {
    mavenCentral()
}
